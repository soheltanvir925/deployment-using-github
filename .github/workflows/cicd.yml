name: cicd pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Nodejs
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run check > test-results.txt
      
      - name: upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-artifact
          path: test-results.txt

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: set up node 
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      
      - name: install dependencies
        run: npm install

      - name: Install production dependencies
        run: npm install --only=production

      - name: download test results using artifact
        uses: actions/download-artifact@v4
        with:
          name: test-results-artifact
      
      - name: Set up SSH
        run: |
          mkdir app
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/app/ansible.pem
          cd app
          chmod 600 ansible.pem
          chmod 700 ansible.pem

      - name: Deploy to EC2
        run: |
          ssh -i "ansible.pem" ${{secrets.EC2_USER}}@${{secrets.EC2_DNS}} << 'EOF'
            cd /home/ubuntu/app   # Path to your project on EC2
            git pull origin main     # Pull latest code
            npm install              # Example: install dependencies
            pm2 restart all || pm2 start app.js --name app  # Restart Node.js app
          EOF