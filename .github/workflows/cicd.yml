name: cicd pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Nodejs
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run check > test-results.txt
      
      - name: upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-artifact
          path: test-results.txt

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: set up node 
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      
      - name: install dependencies
        run: npm install

      - name: Install production dependencies
        run: npm install --only=production

      - name: download test results using artifact
        uses: actions/download-artifact@v4
        with:
          name: test-results-artifact
          
      - name: Upload project to EC2 
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_SSH_PORT || '22' }}
          source: "."
          target: ${{ secrets.EC2_TARGET_PATH }}
          exclude: |
            .git/
            .github/
            node_modules/
            test-results.txt
            *.log
            test-results.txt
          
      - name: Run deploy commands on EC2
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_SSH_PORT || '22' }}
          script: |
            set -e
            cd ${{ secrets.EC2_TARGET_PATH }}
            # ensure node/npm is installed (adjust as necessary for your environment)
            if ! command -v node &> /dev/null
            then
              echo "Node.js could not be found, installing..."
              curl -fsSL https://deb.nodesource.com/setup_22.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi
            # ensure pm2 is installed
            if ! command -v pm2 &> /dev/null
            then
              echo "pm2 could not be found, installing..."
              sudo npm install -g pm2
            fi
            npm ci --only=production
            # Restart the application using pm2
            pm2 describe app || pm2 start npm --name "app" -- start
            pm2 restart app
            pm2 save